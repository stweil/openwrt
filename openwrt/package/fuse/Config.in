config BR2_PACKAGE_KMOD_FUSE
	select BR2_PACKAGE_FUSE
	tristate "kmod-fuse - FUSE kernel module"
	default m if CONFIG_DEVEL
	help
	  With FUSE it is possible to implement a fully functional 
	  filesystem in a userspace program.
	  
	  Features include:
	  
	   * Simple library API
	   * Simple installation (no need to patch or recompile the kernel)
	   * Secure implementation
	   * Userspace - kernel interface is very efficient
	   * Usable by non privileged users
	   * Runs on Linux kernels 2.4.X and 2.6.X
	   * Has proven very stable over time
	  
	  
	  http://fuse.sourceforge.net/
	  
	  Depends: libpthread

config BR2_PACKAGE_LIBFUSE
	tristate "libfuse - FUSE library"
	default m if CONFIG_DEVEL
	depends BR2_PACKAGE_KMOD_FUSE
	select BR2_PACKAGE_LIBPTHREAD
	help
	  With FUSE it is possible to implement a fully functional 
	  filesystem in a userspace program.
	  
	  Features include:
	  
	   * Simple library API
	   * Simple installation (no need to patch or recompile the kernel)
	   * Secure implementation
	   * Userspace - kernel interface is very efficient
	   * Usable by non privileged users
	   * Runs on Linux kernels 2.4.X and 2.6.X
	   * Has proven very stable over time
	  
	  
	  http://fuse.sourceforge.net/
	  
	  Depends: libpthread

config BR2_PACKAGE_FUSE_UTILS
	tristate "fuse-utils - FUSE utilities"
	default m if CONFIG_DEVEL
	depends BR2_PACKAGE_LIBFUSE
	select BR2_PACKAGE_LIBPTHREAD
	help
	  With FUSE it is possible to implement a fully functional 
	  filesystem in a userspace program.
	  
	  Features include:
	  
	   * Simple library API
	   * Simple installation (no need to patch or recompile the kernel)
	   * Secure implementation
	   * Userspace - kernel interface is very efficient
	   * Usable by non privileged users
	   * Runs on Linux kernels 2.4.X and 2.6.X
	   * Has proven very stable over time
	  
	  
	  http://fuse.sourceforge.net/
	  
	  Depends: libpthread


config BR2_PACKAGE_FUSE
	tristate
	default BR2_PACKAGE_KMOD_FUSE

